#                                           #
#                                           #
#                                           #
#                                           #
#                                           #
#   З А П У С К А Є М      І Н Т Е Р А К С  #
#                                           #
#                                           #
#                                           #
#                                           #
#                                           #



#Завантаження docker base-image для інтеракс
IMG_VERSION="v0.13.7" && \
BASE_NAME_INTERAX="interaxTest" && BASE_IMG="ghcr.io/kiracore/docker/base-image:$IMG_VERSION" && \
sudo docker run -i -t -v testVolume:/data  -d --privileged --net bridge --name $BASE_NAME_INTERAX --hostname test.local $BASE_IMG /bin/bash

#запуск в інтерактивному моді base-image
sudo docker start -i $BASE_NAME_INTERAX

#встановлення голангу
GO_VER="1.20.4"&&\\
mkdir ~/tmp || cd ~/tmp || echo "Entered tmp dir" &&\
wget "https://go.dev/dl/go${GO_VER}.linux-amd64.tar.gz" && \
rm -rf /usr/local/go && tar -C /usr/local -xzf "go${GO_VER}.linux-amd64.tar.gz" || echo "Go installed" && \
echo "export PATH=$PATH:/usr/local/go/bin" >> ~/.profile && \
source ~/.profile 

NETWORK_NAME="mynetwork-1" && \
setGlobEnv INTERXD_HOME /data/.interxd-$NETWORK_NAME && \
setGlobEnv SEKAID_HOME /data/.sekaid-$NETWORK_NAME && \
setGlobEnv NETWORK_NAME $NETWORK_NAME && \
INTERX_BRANCH="v0.4.31" && \
DEFAULT_INTERX_PORT=11000 && \
loadGlobEnvs
#apt install gcc

# встановлення інераксу 
INTERX_BRANCH="v0.4.31" && \
cd $HOME && rm -fvr ./interx && \
git clone https://github.com/KiraCore/interx.git -b "release/$INTERX_BRANCH" && \
cd ./interx && chmod -R 777 ./scripts && \
make install && echo "SUCCESS" || echo "FAILED" 
cp /interxd $GOBIN && echo "SUCCESS interxd copied" || echo "FAILED interxd copied" 



#make test && echo "SUCCESS" || echo "FAILED" 
#make test-local && echo "SUCCESS" || echo "FAILED" 


. /etc/profile


#всаноовлення bashUtilsів 
TOOLS_VERSION="v0.3.46" && cd /tmp && FILE_NAME="bash-utils.sh" && \
 wget "https://github.com/KiraCore/tools/releases/download/$TOOLS_VERSION/${FILE_NAME}" -O ./$FILE_NAME && \
 wget "https://github.com/KiraCore/tools/releases/download/$TOOLS_VERSION/${FILE_NAME}.sig" -O ./${FILE_NAME}.sig && \
 cosign verify-blob --key="$KIRA_COSIGN_PUB" --signature=./${FILE_NAME}.sig ./$FILE_NAME --insecure-ignore-tlog && \
 chmod -v 555 ./$FILE_NAME && ./$FILE_NAME bashUtilsSetup "/var/kiraglob" && . /etc/profile && \
 echoInfo "Installed bash-utils $(bashUtilsVersion)"

ARCHITECURE=$(getArch) && \
PLATFORM="$(getPlatform)" && \
DEFAULT_GRPC_PORT=9090 && \
DEFAULT_RPC_PORT=26657 && \
DEFAULT_INTERX_PORT=11000 && \
PING_TARGET="127.0.0.1" && \
INTERNAL_API_PORT=11111
CFG_grpc="dns:///$PING_TARGET:$DEFAULT_GRPC_PORT" && \
CFG_rpc="http://$PING_TARGET:$DEFAULT_RPC_PORT"


#mynetwork NETWORK_NAME ТАКЕ саме як і у секайді ставити 

NETWORK_NAME="mynetwork-1" && \
setGlobEnv INTERXD_HOME /data/.interxd-$NETWORK_NAME && \
setGlobEnv SEKAID_HOME /data/.sekaid-$NETWORK_NAME && \
setGlobEnv NETWORK_NAME $NETWORK_NAME && \
INTERX_BRANCH="v0.4.31" && \
loadGlobEnvs

# rm -rfv "$SEKAID_HOME" "$INTERXD_HOME" && \
mkdir -p "$SEKAID_HOME" "$INTERXD_HOME/cache"

#?? поки не треба
# cp /interxd $GOBIN && echo "SUCCESS interxd copied" || echo "FAILED interxd copied" 




# тут треба дістати faucet акаун з секайда напевно 
#--port="$INTERNAL_API_PORT"
#
#--validator_node_id="$(globGet validator_node_id)"
interxd init --cache_dir="$INTERXD_HOME/cache" --home="$INTERXD_HOME" --grpc="$CFG_grpc" --rpc="$CFG_rpc" --port="11111" \
    --signing_mnemonic="$INTERXD_HOME/interx.mnemonic" \
    --faucet_mnemonic="$INTERXD_HOME/faucet.mnemonic" \
    --port="$DEFAULT_INTERX_PORT" \
    --node_type="validator" \
    --seed_node_id="" \
    --sentry_node_id="" \
    --validator_node_id="227662641e03ae6cc63f85c75e8ffb1f45bf7be9" \
    --addrbook="$(globFile KIRA_ADDRBOOK)" \
    --faucet_time_limit=30 \
    --faucet_amounts="100000ukex,20000000test,300000000000000000samolean,1lol" \
    --faucet_minimum_amounts="1000ukex,50000test,250000000000000samolean,1lol" \
    --fee_amounts="ukex 1000ukex,test 500ukex,samolean 250ukex,lol 100ukex"

cat > /etc/systemd/system/interx.service << EOL
[Unit]
Description=Local Interx
After=network.target
[Service]
MemorySwapMax=0
Type=simple
User=root
WorkingDirectory=/root
ExecStart=$GOBIN/interxd start --home="$INTERXD_HOME"
Restart=always
RestartSec=5
LimitNOFILE=4096
[Install]
WantedBy=default.target
EOL
        
    
 INTERX_GATEWAY="127.0.0.1:11111"
systemctl enable interx.service 
systemctl start interx.service
    
        
    
echoInfo "INFO: Waiting for next block to be produced..."
BLOCK_HEIGHT=$(curl --fail $INTERX_GATEWAY/api/status | jsonParse "interx_info.latest_block_height" || echo "0")
    
timeout 60 sekai-utils awaitBlocks 2

NEXT_BLOCK_HEIGHT=$(curl --fail $INTERX_GATEWAY/api/status | jsonParse "interx_info.latest_block_height" || echo "0")

if [ $BLOCK_HEIGHT -ge $NEXT_BLOCK_HEIGHT ] ; then
    echoErr "ERROR: INTERX failed to catch up with the latest sekai block height, stuck at $BLOCK_HEIGHT"
fi

echoInfo "INFO: Printing interx status..."
curl --fail $INTERX_GATEWAY/api/status | jq

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    